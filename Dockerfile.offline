# Dockerfile for completely offline builds - uses host-built binary
FROM ubuntu:24.04

ENV DEBIAN_FRONTEND=noninteractive

# Use only packages that are likely to be cached or pre-installed
RUN apt-get update || echo "apt update failed" && \
    apt-get install -y --no-install-recommends \
        bash \
        curl \
        libxml2 \
        libssl3 \
        libcurl4 \
        ca-certificates || \
    echo "Basic packages installation completed with warnings"

# Create fallback tools without external dependencies
RUN echo '#!/bin/bash' > /usr/local/bin/jq && \
    echo 'echo "jq not available in this minimal build" >&2' >> /usr/local/bin/jq && \
    echo 'echo "Please install jq manually or use full Docker image" >&2' >> /usr/local/bin/jq && \
    echo 'exit 1' >> /usr/local/bin/jq && \
    chmod +x /usr/local/bin/jq && \
    \
    echo '#!/bin/bash' > /usr/local/bin/yq && \
    echo 'echo "yq not available in this minimal build" >&2' >> /usr/local/bin/yq && \
    echo 'echo "Please install yq manually or use full Docker image" >&2' >> /usr/local/bin/yq && \
    echo 'exit 1' >> /usr/local/bin/yq && \
    chmod +x /usr/local/bin/yq

# Copy a potentially pre-built binary if it exists
# This expects the binary to be built on the host
COPY lpass /usr/local/bin/lpass
RUN chmod +x /usr/local/bin/lpass

# Copy contrib folder if it exists
COPY contrib/ /usr/local/share/lastpass-cli/contrib/

# Make scripts executable if they exist
RUN find /usr/local/share/lastpass-cli/contrib -name "*.sh" -exec chmod +x {} \; || true

# Create directories for volume mounts
RUN mkdir -p /backup /output /logs /data

# Set working directory
WORKDIR /data

# Default entrypoint
ENTRYPOINT ["/usr/local/bin/lpass"]

# Add labels
LABEL org.opencontainers.image.description="LastPass CLI - minimal offline build (requires pre-built binary)"
LABEL org.opencontainers.image.source="https://github.com/fragolinux/lastpass-cli"